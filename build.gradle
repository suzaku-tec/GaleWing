plugins {
    id 'org.springframework.boot' version '3.0.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.github.node-gradle.node" version "3.1.0"
    id "org.sonarqube" version "3.3"
    id 'jacoco'
}

apply plugin: 'io.spring.dependency-management'

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
targetCompatibility = '17'

repositories {
    mavenCentral()
    gradlePluginPortal()
}

// tag::jar[]
jar {
    archiveBaseName = 'GaleWings'
    archiveVersion = '0.1.0'
}
// end::jar[]

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:3.1.1'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.1.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.1'

    implementation 'com.miragesql:miragesql:2.1.0'
    implementation 'org.xerial:sqlite-jdbc:3.36.0.1'

    // https://mvnrepository.com/artifact/be.ceau/opml-parser
    implementation 'be.ceau:opml-parser:2.2.0'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-dbcp2
    implementation 'org.apache.commons:commons-dbcp2:2.9.0'

    // https://mvnrepository.com/artifact/org.springframework/spring-jdbc
    implementation 'org.springframework:spring-jdbc:5.3.18'

    implementation 'com.miragesql:miragesql-integration:2.1.0'

    // https://mvnrepository.com/artifact/com.rometools/rome
    implementation 'com.rometools:rome:1.16.0'

    // https://mvnrepository.com/artifact/org.codehaus.jackson/jackson-core-asl
    implementation 'org.codehaus.jackson:jackson-core-asl:1.9.13'

    // https://mvnrepository.com/artifact/com.google.guava/guava
    implementation 'com.google.guava:guava:30.1.1-jre'

    implementation "com.github.node-gradle:gradle-node-plugin:3.1.0"

    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    implementation 'org.jsoup:jsoup:1.15.3'

    // https://mvnrepository.com/artifact/commons-validator/commons-validator
    implementation 'commons-validator:commons-validator:1.7'

    // https://mvnrepository.com/artifact/com.atilika.kuromoji/kuromoji-ipadic
    implementation 'com.atilika.kuromoji:kuromoji-ipadic:0.9.0'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    testImplementation 'ch.qos.logback:logback-classic:1.2.9'

    implementation 'com.codeborne:selenide:6.4.0'

    // https://mvnrepository.com/artifact/org.mockito/mockito-inline
    testImplementation 'org.mockito:mockito-inline:4.5.1'

    // https://mvnrepository.com/artifact/org.apache.lucene/lucene-analyzers-kuromoji
    implementation group: 'org.apache.lucene', name: 'lucene-analyzers-kuromoji', version: '8.11.1'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

    // https://mvnrepository.com/artifact/org.apache.lucene/lucene-spellchecker
    implementation group: 'org.apache.lucene', name: 'lucene-spellchecker', version: '3.6.2'

    // https://mvnrepository.com/artifact/io.springfox/springfox-boot-starter
    implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'

// https://mvnrepository.com/artifact/io.github.cdimascio/dotenv-java

    implementation group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.11'

    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'

    implementation group: 'oauth.signpost', name: 'signpost-commonshttp4', version: '1.1'

    implementation group: 'commons-io', name: 'commons-io', version: '1.2'

// https://mvnrepository.com/artifact/io.github.cdimascio/dotenv-java
    implementation group: 'io.github.cdimascio', name: 'dotenv-java', version: '2.3.2'

// https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.10.0'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'

// https://mvnrepository.com/artifact/com.atilika.kuromoji/kuromoji-core
    implementation group: 'com.atilika.kuromoji', name: 'kuromoji-core', version: '0.9.0'

    // Weka
    implementation 'nz.ac.waikato.cms.weka:weka-dev:3.9.5'

    // Gradle
    implementation 'org.springframework.boot:spring-boot-starter-logging'

    runtimeOnly 'org.springframework.boot:spring-boot-properties-migrator'
}

sonarqube {
    properties {
        property "sonar.projectKey", "suzaku-tec_GaleWing"
        property "sonar.organization", "suzaku-tec"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.exclusions", "src/main/java/com/galewings/entity/**, " +
                "src/main/java/com/galewings/exception/**, src/main/java/com/galewings/dto/**, " +
                "src/test/java/**/*Test.java, src/main/java/com/galewings/controller/SiteFeedController.java, " +
                "src/main/java/com/galewings/task/AutoUpdateTask.java, src/main/javascript/src/index.ts, " +
                "src/main/java/com/galewings/controller/FeedSampleController.java, " +
                "src/main/java/com/galewings/GaleWingsApplication.java, " +
                "src/main/java/com/galewings/service/MachineLearningService.java, " +
                "src/main/java/com/galewings/service/PodcastService.java"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
    }
}

test {
    useJUnitPlatform()
}

tasks.register('npmRun', NpmTask) {
    npmCommand = ['run', 'deploy']
    execOverrides {
        // The it variable contains the `ExecSpec`
        it.ignoreExitValue = true
        // We can also omit it since "it" is implicit
        workingDir = file('src/main/javascript')
    }
}

apply plugin: 'com.github.node-gradle.node'
processResources.dependsOn npmRun

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = true
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

